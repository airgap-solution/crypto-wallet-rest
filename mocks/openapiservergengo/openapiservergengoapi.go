// Code generated by MockGen. DO NOT EDIT.
// Source: ./openapi/servergen/go/api.go
//
// Generated by this command:
//
//	mockgen -source=./openapi/servergen/go/api.go -destination=mocks/openapiservergengo/openapiservergengoapi.go -package=openapiservergengomocks
//

// Package openapiservergengomocks is a generated GoMock package.
package openapiservergengomocks

import (
	context "context"
	http "net/http"
	reflect "reflect"

	cryptowalletrest "github.com/airgap-solution/crypto-wallet-rest/openapi/servergen/go"
	gomock "go.uber.org/mock/gomock"
)

// MockDefaultAPIRouter is a mock of DefaultAPIRouter interface.
type MockDefaultAPIRouter struct {
	ctrl     *gomock.Controller
	recorder *MockDefaultAPIRouterMockRecorder
	isgomock struct{}
}

// MockDefaultAPIRouterMockRecorder is the mock recorder for MockDefaultAPIRouter.
type MockDefaultAPIRouterMockRecorder struct {
	mock *MockDefaultAPIRouter
}

// NewMockDefaultAPIRouter creates a new mock instance.
func NewMockDefaultAPIRouter(ctrl *gomock.Controller) *MockDefaultAPIRouter {
	mock := &MockDefaultAPIRouter{ctrl: ctrl}
	mock.recorder = &MockDefaultAPIRouterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDefaultAPIRouter) EXPECT() *MockDefaultAPIRouterMockRecorder {
	return m.recorder
}

// BalanceGet mocks base method.
func (m *MockDefaultAPIRouter) BalanceGet(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BalanceGet", arg0, arg1)
}

// BalanceGet indicates an expected call of BalanceGet.
func (mr *MockDefaultAPIRouterMockRecorder) BalanceGet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BalanceGet", reflect.TypeOf((*MockDefaultAPIRouter)(nil).BalanceGet), arg0, arg1)
}

// BroadcastPost mocks base method.
func (m *MockDefaultAPIRouter) BroadcastPost(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BroadcastPost", arg0, arg1)
}

// BroadcastPost indicates an expected call of BroadcastPost.
func (mr *MockDefaultAPIRouterMockRecorder) BroadcastPost(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BroadcastPost", reflect.TypeOf((*MockDefaultAPIRouter)(nil).BroadcastPost), arg0, arg1)
}

// TransactionsGet mocks base method.
func (m *MockDefaultAPIRouter) TransactionsGet(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "TransactionsGet", arg0, arg1)
}

// TransactionsGet indicates an expected call of TransactionsGet.
func (mr *MockDefaultAPIRouterMockRecorder) TransactionsGet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransactionsGet", reflect.TypeOf((*MockDefaultAPIRouter)(nil).TransactionsGet), arg0, arg1)
}

// UnsignedTxGet mocks base method.
func (m *MockDefaultAPIRouter) UnsignedTxGet(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UnsignedTxGet", arg0, arg1)
}

// UnsignedTxGet indicates an expected call of UnsignedTxGet.
func (mr *MockDefaultAPIRouterMockRecorder) UnsignedTxGet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnsignedTxGet", reflect.TypeOf((*MockDefaultAPIRouter)(nil).UnsignedTxGet), arg0, arg1)
}

// MockDefaultAPIServicer is a mock of DefaultAPIServicer interface.
type MockDefaultAPIServicer struct {
	ctrl     *gomock.Controller
	recorder *MockDefaultAPIServicerMockRecorder
	isgomock struct{}
}

// MockDefaultAPIServicerMockRecorder is the mock recorder for MockDefaultAPIServicer.
type MockDefaultAPIServicerMockRecorder struct {
	mock *MockDefaultAPIServicer
}

// NewMockDefaultAPIServicer creates a new mock instance.
func NewMockDefaultAPIServicer(ctrl *gomock.Controller) *MockDefaultAPIServicer {
	mock := &MockDefaultAPIServicer{ctrl: ctrl}
	mock.recorder = &MockDefaultAPIServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDefaultAPIServicer) EXPECT() *MockDefaultAPIServicerMockRecorder {
	return m.recorder
}

// BalanceGet mocks base method.
func (m *MockDefaultAPIServicer) BalanceGet(arg0 context.Context, arg1, arg2 string) (cryptowalletrest.ImplResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BalanceGet", arg0, arg1, arg2)
	ret0, _ := ret[0].(cryptowalletrest.ImplResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BalanceGet indicates an expected call of BalanceGet.
func (mr *MockDefaultAPIServicerMockRecorder) BalanceGet(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BalanceGet", reflect.TypeOf((*MockDefaultAPIServicer)(nil).BalanceGet), arg0, arg1, arg2)
}

// BroadcastPost mocks base method.
func (m *MockDefaultAPIServicer) BroadcastPost(arg0 context.Context, arg1 cryptowalletrest.BroadcastPostRequest) (cryptowalletrest.ImplResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BroadcastPost", arg0, arg1)
	ret0, _ := ret[0].(cryptowalletrest.ImplResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BroadcastPost indicates an expected call of BroadcastPost.
func (mr *MockDefaultAPIServicerMockRecorder) BroadcastPost(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BroadcastPost", reflect.TypeOf((*MockDefaultAPIServicer)(nil).BroadcastPost), arg0, arg1)
}

// TransactionsGet mocks base method.
func (m *MockDefaultAPIServicer) TransactionsGet(arg0 context.Context, arg1, arg2 string) (cryptowalletrest.ImplResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransactionsGet", arg0, arg1, arg2)
	ret0, _ := ret[0].(cryptowalletrest.ImplResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TransactionsGet indicates an expected call of TransactionsGet.
func (mr *MockDefaultAPIServicerMockRecorder) TransactionsGet(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransactionsGet", reflect.TypeOf((*MockDefaultAPIServicer)(nil).TransactionsGet), arg0, arg1, arg2)
}

// UnsignedTxGet mocks base method.
func (m *MockDefaultAPIServicer) UnsignedTxGet(arg0 context.Context, arg1, arg2, arg3, arg4 string) (cryptowalletrest.ImplResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnsignedTxGet", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(cryptowalletrest.ImplResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UnsignedTxGet indicates an expected call of UnsignedTxGet.
func (mr *MockDefaultAPIServicerMockRecorder) UnsignedTxGet(arg0, arg1, arg2, arg3, arg4 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnsignedTxGet", reflect.TypeOf((*MockDefaultAPIServicer)(nil).UnsignedTxGet), arg0, arg1, arg2, arg3, arg4)
}
