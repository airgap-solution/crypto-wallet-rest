// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/adapters/provider/adapter.go
//
// Generated by this command:
//
//	mockgen -source=./internal/adapters/provider/adapter.go -destination=mocks/internaladaptersprovider/internaladaptersprovideradapter.go -package=internaladaptersprovidermocks
//

// Package internaladaptersprovidermocks is a generated GoMock package.
package internaladaptersprovidermocks

import (
	context "context"
	http "net/http"
	reflect "reflect"

	cmcrest "github.com/airgap-solution/cmc-rest/openapi/clientgen/go"
	gomock "go.uber.org/mock/gomock"
)

// MockCMCRestClient is a mock of CMCRestClient interface.
type MockCMCRestClient struct {
	ctrl     *gomock.Controller
	recorder *MockCMCRestClientMockRecorder
	isgomock struct{}
}

// MockCMCRestClientMockRecorder is the mock recorder for MockCMCRestClient.
type MockCMCRestClientMockRecorder struct {
	mock *MockCMCRestClient
}

// NewMockCMCRestClient creates a new mock instance.
func NewMockCMCRestClient(ctrl *gomock.Controller) *MockCMCRestClient {
	mock := &MockCMCRestClient{ctrl: ctrl}
	mock.recorder = &MockCMCRestClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCMCRestClient) EXPECT() *MockCMCRestClientMockRecorder {
	return m.recorder
}

// V1RateCurrencyFiatGet mocks base method.
func (m *MockCMCRestClient) V1RateCurrencyFiatGet(ctx context.Context, from, to string) cmcrest.ApiV1RateCurrencyFiatGetRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "V1RateCurrencyFiatGet", ctx, from, to)
	ret0, _ := ret[0].(cmcrest.ApiV1RateCurrencyFiatGetRequest)
	return ret0
}

// V1RateCurrencyFiatGet indicates an expected call of V1RateCurrencyFiatGet.
func (mr *MockCMCRestClientMockRecorder) V1RateCurrencyFiatGet(ctx, from, to any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "V1RateCurrencyFiatGet", reflect.TypeOf((*MockCMCRestClient)(nil).V1RateCurrencyFiatGet), ctx, from, to)
}

// V1RateCurrencyFiatGetExecute mocks base method.
func (m *MockCMCRestClient) V1RateCurrencyFiatGetExecute(r cmcrest.ApiV1RateCurrencyFiatGetRequest) (*cmcrest.GetRateResponse, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "V1RateCurrencyFiatGetExecute", r)
	ret0, _ := ret[0].(*cmcrest.GetRateResponse)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// V1RateCurrencyFiatGetExecute indicates an expected call of V1RateCurrencyFiatGetExecute.
func (mr *MockCMCRestClientMockRecorder) V1RateCurrencyFiatGetExecute(r any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "V1RateCurrencyFiatGetExecute", reflect.TypeOf((*MockCMCRestClient)(nil).V1RateCurrencyFiatGetExecute), r)
}
