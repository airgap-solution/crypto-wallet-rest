/*
Crypto Wallet REST API

REST API for air-gapped crypto wallets. Supports multiple cryptocurrencies, future-proof. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptowalletrest

import (
	"encoding/json"
)

// checks if the BroadcastPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BroadcastPost200Response{}

// BroadcastPost200Response struct for BroadcastPost200Response
type BroadcastPost200Response struct {
	Crypto *string `json:"crypto,omitempty"`
	Txid *string `json:"txid,omitempty"`
	Status *string `json:"status,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewBroadcastPost200Response instantiates a new BroadcastPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBroadcastPost200Response() *BroadcastPost200Response {
	this := BroadcastPost200Response{}
	return &this
}

// NewBroadcastPost200ResponseWithDefaults instantiates a new BroadcastPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBroadcastPost200ResponseWithDefaults() *BroadcastPost200Response {
	this := BroadcastPost200Response{}
	return &this
}

// GetCrypto returns the Crypto field value if set, zero value otherwise.
func (o *BroadcastPost200Response) GetCrypto() string {
	if o == nil || IsNil(o.Crypto) {
		var ret string
		return ret
	}
	return *o.Crypto
}

// GetCryptoOk returns a tuple with the Crypto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BroadcastPost200Response) GetCryptoOk() (*string, bool) {
	if o == nil || IsNil(o.Crypto) {
		return nil, false
	}
	return o.Crypto, true
}

// HasCrypto returns a boolean if a field has been set.
func (o *BroadcastPost200Response) HasCrypto() bool {
	if o != nil && !IsNil(o.Crypto) {
		return true
	}

	return false
}

// SetCrypto gets a reference to the given string and assigns it to the Crypto field.
func (o *BroadcastPost200Response) SetCrypto(v string) {
	o.Crypto = &v
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *BroadcastPost200Response) GetTxid() string {
	if o == nil || IsNil(o.Txid) {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BroadcastPost200Response) GetTxidOk() (*string, bool) {
	if o == nil || IsNil(o.Txid) {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *BroadcastPost200Response) HasTxid() bool {
	if o != nil && !IsNil(o.Txid) {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *BroadcastPost200Response) SetTxid(v string) {
	o.Txid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BroadcastPost200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BroadcastPost200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BroadcastPost200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BroadcastPost200Response) SetStatus(v string) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *BroadcastPost200Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BroadcastPost200Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *BroadcastPost200Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *BroadcastPost200Response) SetMessage(v string) {
	o.Message = &v
}

func (o BroadcastPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BroadcastPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Crypto) {
		toSerialize["crypto"] = o.Crypto
	}
	if !IsNil(o.Txid) {
		toSerialize["txid"] = o.Txid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableBroadcastPost200Response struct {
	value *BroadcastPost200Response
	isSet bool
}

func (v NullableBroadcastPost200Response) Get() *BroadcastPost200Response {
	return v.value
}

func (v *NullableBroadcastPost200Response) Set(val *BroadcastPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableBroadcastPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableBroadcastPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBroadcastPost200Response(val *BroadcastPost200Response) *NullableBroadcastPost200Response {
	return &NullableBroadcastPost200Response{value: val, isSet: true}
}

func (v NullableBroadcastPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBroadcastPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


