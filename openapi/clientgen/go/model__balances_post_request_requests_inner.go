/*
Crypto Wallet REST API

REST API for air-gapped crypto wallets. Supports multiple cryptocurrencies with fiat currency conversion, future-proof. 

API version: 1.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptowalletrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BalancesPostRequestRequestsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BalancesPostRequestRequestsInner{}

// BalancesPostRequestRequestsInner struct for BalancesPostRequestRequestsInner
type BalancesPostRequestRequestsInner struct {
	// The cryptocurrency symbol (BTC, ETH, etc.)
	CryptoSymbol string `json:"crypto_symbol"`
	// The cryptocurrency address or xpub
	Address string `json:"address"`
	// The fiat currency symbol for conversion (USD, EUR, CAD, etc.)
	FiatSymbol *string `json:"fiat_symbol,omitempty"`
}

type _BalancesPostRequestRequestsInner BalancesPostRequestRequestsInner

// NewBalancesPostRequestRequestsInner instantiates a new BalancesPostRequestRequestsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalancesPostRequestRequestsInner(cryptoSymbol string, address string) *BalancesPostRequestRequestsInner {
	this := BalancesPostRequestRequestsInner{}
	this.CryptoSymbol = cryptoSymbol
	this.Address = address
	var fiatSymbol string = "USD"
	this.FiatSymbol = &fiatSymbol
	return &this
}

// NewBalancesPostRequestRequestsInnerWithDefaults instantiates a new BalancesPostRequestRequestsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalancesPostRequestRequestsInnerWithDefaults() *BalancesPostRequestRequestsInner {
	this := BalancesPostRequestRequestsInner{}
	var fiatSymbol string = "USD"
	this.FiatSymbol = &fiatSymbol
	return &this
}

// GetCryptoSymbol returns the CryptoSymbol field value
func (o *BalancesPostRequestRequestsInner) GetCryptoSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CryptoSymbol
}

// GetCryptoSymbolOk returns a tuple with the CryptoSymbol field value
// and a boolean to check if the value has been set.
func (o *BalancesPostRequestRequestsInner) GetCryptoSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CryptoSymbol, true
}

// SetCryptoSymbol sets field value
func (o *BalancesPostRequestRequestsInner) SetCryptoSymbol(v string) {
	o.CryptoSymbol = v
}

// GetAddress returns the Address field value
func (o *BalancesPostRequestRequestsInner) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *BalancesPostRequestRequestsInner) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *BalancesPostRequestRequestsInner) SetAddress(v string) {
	o.Address = v
}

// GetFiatSymbol returns the FiatSymbol field value if set, zero value otherwise.
func (o *BalancesPostRequestRequestsInner) GetFiatSymbol() string {
	if o == nil || IsNil(o.FiatSymbol) {
		var ret string
		return ret
	}
	return *o.FiatSymbol
}

// GetFiatSymbolOk returns a tuple with the FiatSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalancesPostRequestRequestsInner) GetFiatSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.FiatSymbol) {
		return nil, false
	}
	return o.FiatSymbol, true
}

// HasFiatSymbol returns a boolean if a field has been set.
func (o *BalancesPostRequestRequestsInner) HasFiatSymbol() bool {
	if o != nil && !IsNil(o.FiatSymbol) {
		return true
	}

	return false
}

// SetFiatSymbol gets a reference to the given string and assigns it to the FiatSymbol field.
func (o *BalancesPostRequestRequestsInner) SetFiatSymbol(v string) {
	o.FiatSymbol = &v
}

func (o BalancesPostRequestRequestsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BalancesPostRequestRequestsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["crypto_symbol"] = o.CryptoSymbol
	toSerialize["address"] = o.Address
	if !IsNil(o.FiatSymbol) {
		toSerialize["fiat_symbol"] = o.FiatSymbol
	}
	return toSerialize, nil
}

func (o *BalancesPostRequestRequestsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"crypto_symbol",
		"address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBalancesPostRequestRequestsInner := _BalancesPostRequestRequestsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBalancesPostRequestRequestsInner)

	if err != nil {
		return err
	}

	*o = BalancesPostRequestRequestsInner(varBalancesPostRequestRequestsInner)

	return err
}

type NullableBalancesPostRequestRequestsInner struct {
	value *BalancesPostRequestRequestsInner
	isSet bool
}

func (v NullableBalancesPostRequestRequestsInner) Get() *BalancesPostRequestRequestsInner {
	return v.value
}

func (v *NullableBalancesPostRequestRequestsInner) Set(val *BalancesPostRequestRequestsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBalancesPostRequestRequestsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBalancesPostRequestRequestsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalancesPostRequestRequestsInner(val *BalancesPostRequestRequestsInner) *NullableBalancesPostRequestRequestsInner {
	return &NullableBalancesPostRequestRequestsInner{value: val, isSet: true}
}

func (v NullableBalancesPostRequestRequestsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalancesPostRequestRequestsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


