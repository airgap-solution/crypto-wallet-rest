/*
Crypto Wallet REST API

REST API for air-gapped crypto wallets. Supports multiple cryptocurrencies with fiat currency conversion, future-proof. 

API version: 1.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptowalletrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UnsignedTxGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnsignedTxGet200Response{}

// UnsignedTxGet200Response struct for UnsignedTxGet200Response
type UnsignedTxGet200Response struct {
	CryptoSymbol string `json:"crypto_symbol"`
	FromAddress string `json:"from_address"`
	ToAddress string `json:"to_address"`
	Amount string `json:"amount"`
	FeeAmount string `json:"fee_amount"`
	UnsignedTx string `json:"unsigned_tx"`
	TxSizeBytes *int32 `json:"tx_size_bytes,omitempty"`
}

type _UnsignedTxGet200Response UnsignedTxGet200Response

// NewUnsignedTxGet200Response instantiates a new UnsignedTxGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnsignedTxGet200Response(cryptoSymbol string, fromAddress string, toAddress string, amount string, feeAmount string, unsignedTx string) *UnsignedTxGet200Response {
	this := UnsignedTxGet200Response{}
	this.CryptoSymbol = cryptoSymbol
	this.FromAddress = fromAddress
	this.ToAddress = toAddress
	this.Amount = amount
	this.FeeAmount = feeAmount
	this.UnsignedTx = unsignedTx
	return &this
}

// NewUnsignedTxGet200ResponseWithDefaults instantiates a new UnsignedTxGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnsignedTxGet200ResponseWithDefaults() *UnsignedTxGet200Response {
	this := UnsignedTxGet200Response{}
	return &this
}

// GetCryptoSymbol returns the CryptoSymbol field value
func (o *UnsignedTxGet200Response) GetCryptoSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CryptoSymbol
}

// GetCryptoSymbolOk returns a tuple with the CryptoSymbol field value
// and a boolean to check if the value has been set.
func (o *UnsignedTxGet200Response) GetCryptoSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CryptoSymbol, true
}

// SetCryptoSymbol sets field value
func (o *UnsignedTxGet200Response) SetCryptoSymbol(v string) {
	o.CryptoSymbol = v
}

// GetFromAddress returns the FromAddress field value
func (o *UnsignedTxGet200Response) GetFromAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value
// and a boolean to check if the value has been set.
func (o *UnsignedTxGet200Response) GetFromAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromAddress, true
}

// SetFromAddress sets field value
func (o *UnsignedTxGet200Response) SetFromAddress(v string) {
	o.FromAddress = v
}

// GetToAddress returns the ToAddress field value
func (o *UnsignedTxGet200Response) GetToAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value
// and a boolean to check if the value has been set.
func (o *UnsignedTxGet200Response) GetToAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToAddress, true
}

// SetToAddress sets field value
func (o *UnsignedTxGet200Response) SetToAddress(v string) {
	o.ToAddress = v
}

// GetAmount returns the Amount field value
func (o *UnsignedTxGet200Response) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *UnsignedTxGet200Response) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *UnsignedTxGet200Response) SetAmount(v string) {
	o.Amount = v
}

// GetFeeAmount returns the FeeAmount field value
func (o *UnsignedTxGet200Response) GetFeeAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeeAmount
}

// GetFeeAmountOk returns a tuple with the FeeAmount field value
// and a boolean to check if the value has been set.
func (o *UnsignedTxGet200Response) GetFeeAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeAmount, true
}

// SetFeeAmount sets field value
func (o *UnsignedTxGet200Response) SetFeeAmount(v string) {
	o.FeeAmount = v
}

// GetUnsignedTx returns the UnsignedTx field value
func (o *UnsignedTxGet200Response) GetUnsignedTx() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnsignedTx
}

// GetUnsignedTxOk returns a tuple with the UnsignedTx field value
// and a boolean to check if the value has been set.
func (o *UnsignedTxGet200Response) GetUnsignedTxOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnsignedTx, true
}

// SetUnsignedTx sets field value
func (o *UnsignedTxGet200Response) SetUnsignedTx(v string) {
	o.UnsignedTx = v
}

// GetTxSizeBytes returns the TxSizeBytes field value if set, zero value otherwise.
func (o *UnsignedTxGet200Response) GetTxSizeBytes() int32 {
	if o == nil || IsNil(o.TxSizeBytes) {
		var ret int32
		return ret
	}
	return *o.TxSizeBytes
}

// GetTxSizeBytesOk returns a tuple with the TxSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnsignedTxGet200Response) GetTxSizeBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.TxSizeBytes) {
		return nil, false
	}
	return o.TxSizeBytes, true
}

// HasTxSizeBytes returns a boolean if a field has been set.
func (o *UnsignedTxGet200Response) HasTxSizeBytes() bool {
	if o != nil && !IsNil(o.TxSizeBytes) {
		return true
	}

	return false
}

// SetTxSizeBytes gets a reference to the given int32 and assigns it to the TxSizeBytes field.
func (o *UnsignedTxGet200Response) SetTxSizeBytes(v int32) {
	o.TxSizeBytes = &v
}

func (o UnsignedTxGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnsignedTxGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["crypto_symbol"] = o.CryptoSymbol
	toSerialize["from_address"] = o.FromAddress
	toSerialize["to_address"] = o.ToAddress
	toSerialize["amount"] = o.Amount
	toSerialize["fee_amount"] = o.FeeAmount
	toSerialize["unsigned_tx"] = o.UnsignedTx
	if !IsNil(o.TxSizeBytes) {
		toSerialize["tx_size_bytes"] = o.TxSizeBytes
	}
	return toSerialize, nil
}

func (o *UnsignedTxGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"crypto_symbol",
		"from_address",
		"to_address",
		"amount",
		"fee_amount",
		"unsigned_tx",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnsignedTxGet200Response := _UnsignedTxGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUnsignedTxGet200Response)

	if err != nil {
		return err
	}

	*o = UnsignedTxGet200Response(varUnsignedTxGet200Response)

	return err
}

type NullableUnsignedTxGet200Response struct {
	value *UnsignedTxGet200Response
	isSet bool
}

func (v NullableUnsignedTxGet200Response) Get() *UnsignedTxGet200Response {
	return v.value
}

func (v *NullableUnsignedTxGet200Response) Set(val *UnsignedTxGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUnsignedTxGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUnsignedTxGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnsignedTxGet200Response(val *UnsignedTxGet200Response) *NullableUnsignedTxGet200Response {
	return &NullableUnsignedTxGet200Response{value: val, isSet: true}
}

func (v NullableUnsignedTxGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnsignedTxGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


