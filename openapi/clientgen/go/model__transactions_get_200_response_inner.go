/*
Crypto Wallet REST API

REST API for air-gapped crypto wallets. Supports multiple cryptocurrencies, future-proof. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cryptowalletrest

import (
	"encoding/json"
	"time"
)

// checks if the TransactionsGet200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionsGet200ResponseInner{}

// TransactionsGet200ResponseInner struct for TransactionsGet200ResponseInner
type TransactionsGet200ResponseInner struct {
	Txid *string `json:"txid,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Amount *string `json:"amount,omitempty"`
	Direction *string `json:"direction,omitempty"`
}

// NewTransactionsGet200ResponseInner instantiates a new TransactionsGet200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionsGet200ResponseInner() *TransactionsGet200ResponseInner {
	this := TransactionsGet200ResponseInner{}
	return &this
}

// NewTransactionsGet200ResponseInnerWithDefaults instantiates a new TransactionsGet200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionsGet200ResponseInnerWithDefaults() *TransactionsGet200ResponseInner {
	this := TransactionsGet200ResponseInner{}
	return &this
}

// GetTxid returns the Txid field value if set, zero value otherwise.
func (o *TransactionsGet200ResponseInner) GetTxid() string {
	if o == nil || IsNil(o.Txid) {
		var ret string
		return ret
	}
	return *o.Txid
}

// GetTxidOk returns a tuple with the Txid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsGet200ResponseInner) GetTxidOk() (*string, bool) {
	if o == nil || IsNil(o.Txid) {
		return nil, false
	}
	return o.Txid, true
}

// HasTxid returns a boolean if a field has been set.
func (o *TransactionsGet200ResponseInner) HasTxid() bool {
	if o != nil && !IsNil(o.Txid) {
		return true
	}

	return false
}

// SetTxid gets a reference to the given string and assigns it to the Txid field.
func (o *TransactionsGet200ResponseInner) SetTxid(v string) {
	o.Txid = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *TransactionsGet200ResponseInner) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsGet200ResponseInner) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *TransactionsGet200ResponseInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *TransactionsGet200ResponseInner) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TransactionsGet200ResponseInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsGet200ResponseInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TransactionsGet200ResponseInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *TransactionsGet200ResponseInner) SetAmount(v string) {
	o.Amount = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *TransactionsGet200ResponseInner) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionsGet200ResponseInner) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *TransactionsGet200ResponseInner) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *TransactionsGet200ResponseInner) SetDirection(v string) {
	o.Direction = &v
}

func (o TransactionsGet200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionsGet200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Txid) {
		toSerialize["txid"] = o.Txid
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	return toSerialize, nil
}

type NullableTransactionsGet200ResponseInner struct {
	value *TransactionsGet200ResponseInner
	isSet bool
}

func (v NullableTransactionsGet200ResponseInner) Get() *TransactionsGet200ResponseInner {
	return v.value
}

func (v *NullableTransactionsGet200ResponseInner) Set(val *TransactionsGet200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionsGet200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionsGet200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionsGet200ResponseInner(val *TransactionsGet200ResponseInner) *NullableTransactionsGet200ResponseInner {
	return &NullableTransactionsGet200ResponseInner{value: val, isSet: true}
}

func (v NullableTransactionsGet200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionsGet200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


