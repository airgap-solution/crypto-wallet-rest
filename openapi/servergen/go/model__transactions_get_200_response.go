// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Crypto Wallet REST API
 *
 * REST API for air-gapped crypto wallets. Supports multiple cryptocurrencies with fiat currency conversion, future-proof. 
 *
 * API version: 1.0.1
 */

package cryptowalletrest




type TransactionsGet200Response struct {

	CryptoSymbol string `json:"crypto_symbol"`

	Address string `json:"address"`

	Transactions []Transaction `json:"transactions"`

	// Total number of transactions for this address
	TotalCount int32 `json:"total_count"`

	// Whether there are more transactions available
	HasMore bool `json:"has_more"`
}

// AssertTransactionsGet200ResponseRequired checks if the required fields are not zero-ed
func AssertTransactionsGet200ResponseRequired(obj TransactionsGet200Response) error {
	elements := map[string]interface{}{
		"crypto_symbol": obj.CryptoSymbol,
		"address": obj.Address,
		"transactions": obj.Transactions,
		"total_count": obj.TotalCount,
		"has_more": obj.HasMore,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Transactions {
		if err := AssertTransactionRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertTransactionsGet200ResponseConstraints checks if the values respects the defined constraints
func AssertTransactionsGet200ResponseConstraints(obj TransactionsGet200Response) error {
	for _, el := range obj.Transactions {
		if err := AssertTransactionConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
