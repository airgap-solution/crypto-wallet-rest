// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Crypto Wallet REST API
 *
 * REST API for air-gapped crypto wallets. Supports multiple cryptocurrencies with fiat currency conversion, future-proof. 
 *
 * API version: 1.0.2
 */

package cryptowalletrest


import (
	"time"
)



type BalanceGet200Response struct {

	CryptoSymbol string `json:"crypto_symbol"`

	Address string `json:"address"`

	CryptoBalance float64 `json:"crypto_balance"`

	FiatSymbol string `json:"fiat_symbol"`

	FiatValue float64 `json:"fiat_value"`

	ExchangeRate float64 `json:"exchange_rate"`

	// Absolute change in fiat value over the last 24 hours
	Change24h float64 `json:"change24h"`

	Timestamp time.Time `json:"timestamp"`
}

// AssertBalanceGet200ResponseRequired checks if the required fields are not zero-ed
func AssertBalanceGet200ResponseRequired(obj BalanceGet200Response) error {
	elements := map[string]interface{}{
		"crypto_symbol": obj.CryptoSymbol,
		"address": obj.Address,
		"crypto_balance": obj.CryptoBalance,
		"fiat_symbol": obj.FiatSymbol,
		"fiat_value": obj.FiatValue,
		"exchange_rate": obj.ExchangeRate,
		"change24h": obj.Change24h,
		"timestamp": obj.Timestamp,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertBalanceGet200ResponseConstraints checks if the values respects the defined constraints
func AssertBalanceGet200ResponseConstraints(obj BalanceGet200Response) error {
	return nil
}
