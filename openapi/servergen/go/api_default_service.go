// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Crypto Wallet REST API
 *
 * REST API for air-gapped crypto wallets. Supports multiple cryptocurrencies with fiat currency conversion, future-proof. 
 *
 * API version: 1.0.2
 */

package cryptowalletrest

import (
	"context"
	"net/http"
	"errors"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() *DefaultAPIService {
	return &DefaultAPIService{}
}

// BalancesPost - Get balances for multiple addresses and cryptocurrencies
func (s *DefaultAPIService) BalancesPost(ctx context.Context, balancesPostRequest BalancesPostRequest) (ImplResponse, error) {
	// TODO - update BalancesPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BalancesPost200Response{}) or use other options such as http.Ok ...
	// return Response(200, BalancesPost200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BalancesPost method not implemented")
}

// TransactionsGet - Get transaction history for an address
func (s *DefaultAPIService) TransactionsGet(ctx context.Context, cryptoSymbol string, address string, limit int32, offset int32) (ImplResponse, error) {
	// TODO - update TransactionsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, TransactionsGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, TransactionsGet200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TransactionsGet method not implemented")
}

// UnsignedTxGet - Generate an unsigned transaction
func (s *DefaultAPIService) UnsignedTxGet(ctx context.Context, cryptoSymbol string, fromAddress string, toAddress string, amount string, feeRate float64) (ImplResponse, error) {
	// TODO - update UnsignedTxGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, UnsignedTxGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, UnsignedTxGet200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UnsignedTxGet method not implemented")
}

// BroadcastPost - Broadcast signed transaction
func (s *DefaultAPIService) BroadcastPost(ctx context.Context, broadcastPostRequest BroadcastPostRequest) (ImplResponse, error) {
	// TODO - update BroadcastPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BroadcastPost200Response{}) or use other options such as http.Ok ...
	// return Response(200, BroadcastPost200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BroadcastPost method not implemented")
}
